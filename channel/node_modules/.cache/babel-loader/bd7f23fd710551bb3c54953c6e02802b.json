{"ast":null,"code":"import _classCallCheck from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\src\\\\components\\\\streams\\\\StreamEdit.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nvar StreamEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamEdit, _React$Component);\n\n  function StreamEdit() {\n    _classCallCheck(this, StreamEdit);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamEdit).apply(this, arguments));\n  }\n\n  _createClass(StreamEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n\n      if (!this.props.stream) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"StreamEdit\");\n    }\n  }]);\n\n  return StreamEdit;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["D:\\Mini Projects\\streams\\channel\\src\\components\\streams\\StreamEdit.js"],"names":["React","connect","fetchStream","StreamEdit","props","match","params","id","console","log","stream","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,WAAR,QAA0B,eAA1B;;IAEMC,U;;;;;;;;;;;;;wCACiB;AACf,WAAKC,KAAL,CAAWF,WAAX,CAAuB,KAAKE,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;;6BAEQ;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;;AACA,UAAG,CAAC,KAAKA,KAAL,CAAWM,MAAf,EAAsB;AAClB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH;;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAGH;;;;EAboBV,KAAK,CAACW,S;;AAgB/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,SAAO;AAACJ,IAAAA,MAAM,EAAEG,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAT,GAAP;AACH,CAFD;;AAIA,eAAeN,OAAO,CAACW,eAAD,EAAkB;AAACV,EAAAA,WAAW,EAAXA;AAAD,CAAlB,CAAP,CAAwCC,UAAxC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {fetchStream} from '../../actions'\r\n\r\nclass StreamEdit extends React.Component {\r\n    componentDidMount(){\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        if(!this.props.stream){\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            <div>StreamEdit</div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {stream: state.streams[ownProps.match.params.id]};\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchStream})(StreamEdit);"]},"metadata":{},"sourceType":"module"}