{"ast":null,"code":"import _classCallCheck from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\src\\\\components\\\\streams\\\\StreamList.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    _classCallCheck(this, StreamList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamList).apply(this, arguments));\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch() {\n      this.props.fetchStreams();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.streams);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"StreamList\");\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    streams: Object.values(state.streams)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["D:\\Mini Projects\\streams\\channel\\src\\components\\streams\\StreamList.js"],"names":["React","connect","fetchStreams","StreamList","props","console","log","streams","Component","mapStateToProps","state","Object","values"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;IAEMC,U;;;;;;;;;;;;;wCACiB;AACf,WAAKC,KAAL,CAAWF,YAAX;AACH;;;6BAEQ;AACLG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWG,OAAvB;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAGH;;;;EAVoBP,KAAK,CAACQ,S;;AAa/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AAAEH,IAAAA,OAAO,EAAGI,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACH,OAApB;AAAZ,GAAP;AACH,CAFD;;AAIA,eAAeN,OAAO,CAACQ,eAAD,EAAkB;AAAEP,EAAAA,YAAY,EAAEA;AAAhB,CAAlB,CAAP,CAAyDC,UAAzD,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { fetchStreams } from '../../actions';\r\n\r\nclass StreamList extends React.Component {\r\n    componentDidCatch(){\r\n        this.props.fetchStreams();\r\n    }\r\n    \r\n    render() {\r\n        console.log(this.props.streams)\r\n        return (\r\n            <div>StreamList</div>\r\n        )\r\n    }   \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { streams : Object.values(state.streams)};\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStreams: fetchStreams}) (StreamList);"]},"metadata":{},"sourceType":"module"}