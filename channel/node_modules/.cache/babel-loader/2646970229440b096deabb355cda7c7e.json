{"ast":null,"code":"import _classCallCheck from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\src\\\\components\\\\streams\\\\StreamShow.js\";\nimport React from \"react\";\nimport flv from 'flv.js';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nvar StreamShow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamShow, _React$Component);\n\n  function StreamShow(props) {\n    var _this;\n\n    _classCallCheck(this, StreamShow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StreamShow).call(this, props));\n    _this.videoRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(StreamShow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var id = this.props.match.params.id;\n      this.props.fetchStream(id);\n      flv.createPlayer({\n        type: 'flv',\n        url: \"http://localhost:8000/live/\".concat(id, \".flv\")\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.stream) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      var _this$props$stream = this.props.stream,\n          title = _this$props$stream.title,\n          description = _this$props$stream.description;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        ref: this.videoRef,\n        style: {\n          width: '100%'\n        },\n        controls: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, title), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, description));\n    }\n  }]);\n\n  return StreamShow;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream\n})(StreamShow);","map":{"version":3,"sources":["D:\\Mini Projects\\streams\\channel\\src\\components\\streams\\StreamShow.js"],"names":["React","flv","connect","fetchStream","StreamShow","props","videoRef","createRef","id","match","params","createPlayer","type","url","stream","title","description","width","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,eAA1B;;IAEMC,U;;;;;AAEF,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,oFAAMA,KAAN;AACI,UAAKC,QAAL,GAAgBN,KAAK,CAACO,SAAN,EAAhB;AAFU;AAGjB;;;;wCAEiB;AAAA,UACRC,EADQ,GACF,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MADf,CACRF,EADQ;AAEf,WAAKH,KAAL,CAAWF,WAAX,CAAuBK,EAAvB;AACAP,MAAAA,GAAG,CAACU,YAAJ,CAAiB;AACbC,QAAAA,IAAI,EAAC,KADQ;AAEbC,QAAAA,GAAG,uCAA+BL,EAA/B;AAFU,OAAjB;AAIH;;;6BAES;AACL,UAAG,CAAC,KAAKH,KAAL,CAAWS,MAAf,EAAsB;AAClB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH;;AAHI,+BAIwB,KAAKT,KAAL,CAAWS,MAJnC;AAAA,UAIEC,KAJF,sBAIEA,KAJF;AAAA,UAISC,WAJT,sBAISA,WAJT;AAML,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,GAAG,EAAE,KAAKV,QAAjB;AAA2B,QAAA,KAAK,EAAE;AAACW,UAAAA,KAAK,EAAC;AAAP,SAAlC;AAAkD,QAAA,QAAQ,EAAE,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,KAAL,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,WAAL,CAHJ,CADJ;AAOH;;;;EA7BoBhB,KAAK,CAACkB,S;;AAgC/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAoB;AACxC,SAAO;AAACP,IAAAA,MAAM,EAACM,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACZ,KAAT,CAAeC,MAAf,CAAsBF,EAApC;AAAR,GAAP;AACH,CAFD;;AAIA,eAAeN,OAAO,CAACiB,eAAD,EAAkB;AAAChB,EAAAA,WAAW,EAAXA;AAAD,CAAlB,CAAP,CAAyCC,UAAzC,CAAf","sourcesContent":["import React from \"react\";\r\nimport flv from 'flv.js';\r\nimport {connect} from 'react-redux';\r\nimport {fetchStream} from '../../actions';\r\n\r\nclass StreamShow extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n            this.videoRef = React.createRef();\r\n    }\r\n    \r\n   componentDidMount(){\r\n       const {id} = this.props.match.params;\r\n       this.props.fetchStream(id);\r\n       flv.createPlayer({\r\n           type:'flv',\r\n           url:`http://localhost:8000/live/${id}.flv`\r\n       })\r\n   } \r\n\r\n    render() {\r\n        if(!this.props.stream){\r\n            return <div>Loading...</div>\r\n        }\r\n        const {title, description} = this.props.stream;\r\n\r\n        return (\r\n            <div>\r\n                <video ref={this.videoRef} style={{width:'100%'}} controls={true} />\r\n                <h1>{title}</h1>\r\n                <h3>{description}</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    return {stream:state.streams[ownProps.match.params.id]};\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchStream}) (StreamShow);"]},"metadata":{},"sourceType":"module"}