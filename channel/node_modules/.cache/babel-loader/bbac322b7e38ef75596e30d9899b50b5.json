{"ast":null,"code":"import _classCallCheck from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Mini Projects\\\\streams\\\\channel\\\\src\\\\components\\\\streams\\\\StreamList.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStreams } from '../../actions/index';\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    _classCallCheck(this, StreamList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamList).apply(this, arguments));\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams();\n    }\n  }, {\n    key: \"renderAdmin\",\n    value: function renderAdmin(stream) {\n      if (stream.userId === this.props.currentUserId) {\n        return React.createElement(\"div\", {\n          className: \"right floated content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"ui button primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"button\", {\n          className: \"ui button negative\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"Delete\"));\n      }\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      var _this = this;\n\n      return this.props.streams.map(function (stream) {\n        return React.createElement(\"div\", {\n          className: \"item\",\n          key: stream.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, _this.renderAdmin(stream), React.createElement(\"i\", {\n          className: \"large middle aligned icon camera\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, stream.title, React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, stream.description)));\n      });\n    } //Only shows if user is signed in\n\n  }, {\n    key: \"renderCreate\",\n    value: function renderCreate() {\n      if (this.props.isSignedIn) {\n        return React.createElement(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/streams/new\",\n          className: \"ui button primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Create Stream\"));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.streams);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"streams\"), React.createElement(\"div\", {\n        className: \"ui celled list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.renderList()), this.renderCreate());\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["D:\\Mini Projects\\streams\\channel\\src\\components\\streams\\StreamList.js"],"names":["React","connect","Link","fetchStreams","StreamList","props","stream","userId","currentUserId","streams","map","id","renderAdmin","title","description","isSignedIn","textAlign","console","log","renderList","renderCreate","Component","mapStateToProps","state","Object","values","auth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,qBAA7B;;IAEMC,U;;;;;;;;;;;;;wCACiB;AACf,WAAKC,KAAL,CAAWF,YAAX;AACH;;;gCAEWG,M,EAAO;AACf,UAAGA,MAAM,CAACC,MAAP,KAAkB,KAAKF,KAAL,CAAWG,aAAhC,EAA8C;AAC1C,eACA;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAII;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CADA;AAUH;AACJ;;;iCAEY;AAAA;;AACT,aAAO,KAAKH,KAAL,CAAWI,OAAX,CAAmBC,GAAnB,CAAuB,UAAAJ,MAAM,EAAI;AACpC,eACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,GAAG,EAAEA,MAAM,CAACK,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,KAAI,CAACC,WAAL,CAAiBN,MAAjB,CADD,EAEI;AAAG,UAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGQ;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCA,MAAM,CAACO,KADR,EAEA;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BP,MAAM,CAACQ,WAArC,CAFA,CAHR,CADJ;AAWH,OAZM,CAAP;AAaH,K,CAED;;;;mCACc;AACV,UAAG,KAAKT,KAAL,CAAWU,UAAd,EAAyB;AACrB,eACI;AAAK,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAC;AAAX,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,cAAT;AAAwB,UAAA,SAAS,EAAC,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ;AAOH;AACJ;;;6BAEQ;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWI,OAAvB;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEQ;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKU,UAAL,EAAjC,CAFR,EAIK,KAAKC,YAAL,EAJL,CADJ;AAQH;;;;EA3DoBpB,KAAK,CAACqB,S;;AA8D/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHd,IAAAA,OAAO,EAAGe,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACd,OAApB,CADP;AAEHD,IAAAA,aAAa,EAAEe,KAAK,CAACG,IAAN,CAAWnB,MAFvB;AAGHQ,IAAAA,UAAU,EAAEQ,KAAK,CAACG,IAAN,CAAWX;AAHpB,GAAP;AAKH,CAND;;AAQA,eAAed,OAAO,CAACqB,eAAD,EAAkB;AAAEnB,EAAAA,YAAY,EAAEA;AAAhB,CAAlB,CAAP,CAAyDC,UAAzD,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchStreams } from '../../actions/index';\r\n\r\nclass StreamList extends React.Component {\r\n    componentDidMount(){\r\n        this.props.fetchStreams();\r\n    }\r\n\r\n    renderAdmin(stream){\r\n        if(stream.userId === this.props.currentUserId){\r\n            return (\r\n            <div className=\"right floated content\">\r\n                <button className=\"ui button primary\">\r\n                Edit\r\n                </button>\r\n                <button className=\"ui button negative\">\r\n                Delete\r\n                </button>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderList() {\r\n        return this.props.streams.map(stream => {\r\n            return (\r\n                <div className=\"item\" key={stream.id}>\r\n                {this.renderAdmin(stream)}\r\n                    <i className=\"large middle aligned icon camera\" />\r\n                        <div className=\"content\">\r\n                        {stream.title}\r\n                        <div className=\"description\">{stream.description}</div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    \r\n    //Only shows if user is signed in\r\n    renderCreate(){\r\n        if(this.props.isSignedIn){\r\n            return (\r\n                <div style={{textAlign:'right'}}>\r\n                    <Link to=\"/streams/new\" className=\"ui button primary\">\r\n                    Create Stream\r\n                    </Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.streams)\r\n        return (\r\n            <div>\r\n                <h2>streams</h2>\r\n                    <div className=\"ui celled list\">{this.renderList()}\r\n                </div>\r\n                {this.renderCreate()}\r\n                </div>\r\n        )\r\n    }   \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        streams : Object.values(state.streams),\r\n        currentUserId: state.auth.userId,\r\n        isSignedIn: state.auth.isSignedIn\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStreams: fetchStreams}) (StreamList);"]},"metadata":{},"sourceType":"module"}